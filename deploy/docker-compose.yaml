services:
  url-shortener_http-server:
      build:
        context: ..
        dockerfile: deploy/Dockerfile
      container_name: url-shortener_http-server
      restart: unless-stopped
      ports:
        - ${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}
      environment:
        - HTTP_SERVER_PORT=${HTTP_SERVER_PORT}
        - MIGRATIONS_PATH=/app/migrations
        - CONFIG_PATH=/app/configs/${CONFIG}
        - POSTGRES_PORT=${POSTGRES_PORT}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_HOST=url-shortener_database
      depends_on:
        url-shortener_database:
          condition: service_healthy

  url-shortener_database:
    image: postgres:17.3
    container_name: url-shortener_database
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  postgres_data: